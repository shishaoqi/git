git checkout

If the identity used for this commit is wrong, you can fix it with:
git commit --amend --author='Your Name <you@example.com>'

//http://ruby-china.org/topics/939
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative


本地永久忽略，效果的gitignore一样，只不过不适于写到gitignore中而已，可以自己建立一个本地独享的gitignore
$ git config --global core.excludesfile /path/to/file  
//#也可以直接将本地要忽略的文件添加到.git/info/exclude中
#cTag
.tags
.tags_sorted_by_file

修改.git/info/exclude这个文件


#忽略跟踪 与 恢复跟踪
$ git update-index --assume-unchanged /path/to/file       #忽略跟踪
$ git update-index --no-assume-unchanged /path/to/file  #恢复跟踪
//我忽略了
git update-index --assume-unchanged config/db_config.php
git update-index --assume-unchanged config/domain_config.php

#忽略跟踪vendor下composer部分文件跟踪
git update-index --assume-unchanged vendor/autoload.php
git update-index --assume-unchanged vendor/composer/ClassLoader.php
git update-index --assume-unchanged vendor/composer/autoload_files.php
git update-index --assume-unchanged vendor/composer/autoload_psr4.php
git update-index --assume-unchanged vendor/composer/autoload_real.php
git update-index --assume-unchanged vendor/composer/installed.json


#忽略跟踪composer.lock
git update-index --assume-unchanged composer.lock

#回退
先使用git log 查看 commit日志 或 git reflog
找到需要回退的那次commit的 哈希值，
git reset --hard commit_id 
#回退上一次
git reset --hard HEAD^


#拉取远程分支
git checkout -b 本地分支名x origin/远程分支名x

#从版本控制中去除
git rm -r -n --cached "bin/" //-n：加上这个参数，执行命令时，是不会删除任何文件，而是展示此命令要删除的文件列表预览。
git rm -r --cached  "bin/"      //最终执行命令. 
git commit -m" remove bin folder all file out of control"    //提交
git push origin master   //提交到远程服务器




